// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package bootstrap

import (
	"backend_template/internal/auth/token"
	"backend_template/internal/config"
	"backend_template/internal/db"
	"backend_template/internal/logger"
	"backend_template/internal/user/repository"
	"backend_template/internal/user/service"

	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func NewApp() (*App, error) {
	zapLogger := logger.New()
	configConfig := config.Load(zapLogger)
	gormDB, err := db.ProvideDB(configConfig)
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(gormDB)
	userService := service.NewUserService(userRepository, zapLogger)
	tokenManager := token.NewTokenManager(configConfig)
	engine := ProvideRouter(userService, tokenManager)
	app := &App{
		Router: engine,
	}
	return app, nil
}

// wire.go:

type App struct {
	Router *gin.Engine
}
